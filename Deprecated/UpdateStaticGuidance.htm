<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="mc-master-page: url('../Resources/MasterPages/DocProcess.flmsp');">
    <head />
    <body>
        <h1>Update Static Guidance</h1>
        <p>PM and the Documentation Team determine when static guidance should be added or updated. Once the static guidance text has been updated, a series of PRs are automatically created to then be merged and approved by various groups. Click the following thumbnail to view the flow diagram of the process</p>
        <p>
            <img src="../Resources/Images/StaticGuidanceFlowDiagram.png" style="mc-thumbnail: link;" />:</p>
        <p>To update static guidance:</p>
        <ol>
            <li>
                <p>Create a JIRA ticket (typically on the DocTeam ToDos board, but sometimes PM creates static guidance tickets on the Syniti Knowledge Platform (KYB) board) to track the work to update the static guidance.</p>
            </li>
            <li>
                <p>Pull down the master branch from <span style="font-family: monospace;">ui-component-libs</span> repo.</p>
            </li>
            <li>
                <p>Create a new branch, using the Jira ticket number as a name.</p>
            </li>
            <li>
                <p>Navigate to this file: <a href="https://github.com/BackOfficeAssoc/ui-component-libs/blob/master/projects/ui-component-libs/src/lib/guidance/constants/static-guidance.ts file." target="_blank" rel="noopener noreferrer">https://github.com/BackOfficeAssoc/ui-component-libs/projects/ui-component-libs/src/lib/guidance/constants/static-guidance.ts</a>.</p>
                <p class="note"><b>NOTE:</b> Open with Atom or Visual Studio Code.</p>
            </li>
            <li>
                <p>Update the descriptionText as needed, save and close the file.</p>
            </li>
            <li>
                <p>Navigate to the file <span style="font-family: Consolas;">ui-component-libs/projects/ui-commponent libs/package.json</span>.</p>
            </li>
            <li>
                <p>Increment the third decimal place by 1 for version (e.g.: 1.1.14 to 1.1.15).</p>
            </li>
        </ol>
        <p>
            <img src="../Resources/Images/increment.PNG" style="border:1px solid black" />
        </p>
        <p class="note"><b>NOTE: </b>Only update the version number once during a round of updates. If you go back and forth with a reviewer, do not update the version number each time. </p>
        <ol MadCap:continue="true">
            <li>
                <p>Save and push your repo to the <span style="font-family: monospace;">ui-component-libs</span> repo.</p>
                <p><b>NOTE:</b> When staging files to commit, only add the 2 files that were changed: <span style="font-family: Consolas;">static-guidance.ts</span> and <span style="font-family: Consolas;">package.json</span>. Do <b>NOT </b>perform a <span style="font-family: Consolas;">git add . </span></p>
            </li>
            <li>
                <p>Open a PR to merge it to <span style="font-family: monospace;">master</span>.</p>
            </li>
            <li>
                <p>Ask for a review from the following groups:</p>
                <ul>
                    <li>
                        <p><b>App Engineering—</b>performs a technical review on things like predicates, page properties and missing quotes/commas. They may also review the package dependency updates</p>
                    </li>
                    <li>
                        <p><b>Doc Team or BA—</b>performs a textual content review by adding in-line comments to the GitHub PR. Refer to <a href="https://docs.github.com/en/github/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request" target="_blank" rel="noopener noreferrer">Commenting on a Pull Request</a> for more information.</p>
                    </li>
                </ul>
            </li>
            <li>
                <p>Set the ticket to Code Review, if it is a KYB ticket and not a DT&#160;ticket (DT tickets don't have a Code Review option).</p>
            </li>
            <li>
                <p>When the App Engineering and the Doc Team / BA resources have both approved the PRs, merge the PRs to <span style="font-family: monospace;">master</span>. At this point, the following happens:</p>
            </li>
        </ol>
        <ul>
            <li>
                <p>CircleCi publishes the new version to the NPM registry</p>
            </li>
            <li>
                <p>CircleCI creates PRs in each of the affected repos to bump the latest ui-component-libs and assigns the Application Engineers as reviewers with the PR author (i.e., the Tech Writer) as the Assignee.</p>
                <p>
                    <img src="../Resources/Images/StagicGuidanceCircleCI.png" />
                </p>
            </li>
        </ul>
        <ol MadCap:continue="true">
            <li>
                <p>An App Developer approves each of the version update PRs.</p>
            </li>
            <li>
                <p>Merge the <span style="font-family: monospace;">&lt;repo&gt;/bump</span> PRs to <span style="font-family: monospace;">&lt;repo&gt;develop</span>.</p>
            </li>
            <li>
                <p>Verify changes on <span style="font-family: monospace;">dev/us-west-2</span> (<a href="https://admin.syniti-dev.com/" target="_blank" rel="noopener noreferrer">https://admin.syniti-dev.com</a>)</p>
            </li>
            <li>
                <p>Ask the QE resource on the mission to review the changes.</p>
            </li>
            <li>
                <p>Open a PR for each of the repos to merge <span style="font-family: monospace;">&lt;repo&gt;/develop</span> to <span style="font-family: monospace;">&lt;repo&gt;/master</span> and request review from App Engineering.</p>
            </li>
        </ol>
        <p class="note"><b>NOTE:</b> If another Tech Writer also has static guidance changes included in this release, add them as a Reviewer to ensure their changes are ready for production.</p>
        <ol MadCap:continue="true">
            <li>
                <p>Once approved, merge the PRs to their respective <span style="font-family: monospace;">&lt;repo&gt;/master</span>, which pushes the changes to Prod.</p>
            </li>
        </ol>
        <p class="note"><b>NOTE:</b> A final PR for the <span style="font-family: monospace;">gaua-state</span> repo is automatically created for the following two environments: <span style="font-family: monospace;">prd/us-east-2</span> and <span style="font-family: monospace;">prd/eu-central-1</span>.</p>
        <ol MadCap:continue="true">
            <li>
                <p>Approve and merge the two PRs for <span style="font-family: monospace;">gaua-state</span>.This step updates the Image ID, so there’s no need for a developer’s review. The following is an example PR:</p>
                <p>
                    <img src="../Resources/Images/StagicGuidanceGauaStateRepo.png" />
                </p>
            </li>
            <li>
                <p>Confirm all looks good in Prod and announce to the mission's Slack channel that static guidance has been updated.</p>
            </li>
        </ol>
        <h2>Identifying apps/services in ui-guidance-libs</h2>
        <p>In each of our projects that need to support contextual guidance, they'll have a file in the app/models folder named guidancecontext.ts. Looking at the appcontext value on line 11 will show what context value the specific application is passing into the guidance component, which is what's used to look up the static guidance.</p>
        <p>Here is a list of the front end services and the pages for which they display guidance:</p>
        <ul>
            <li>
                <p>dione (anything that starts with admin.syniti.com/)</p>
                <ul>
                    <li>
                        <p>About Me</p>
                    </li>
                    <li>
                        <p>Accounts</p>
                    </li>
                    <li>
                        <p>Sites</p>
                    </li>
                    <li>
                        <p>Stacks</p>
                    </li>
                </ul>
            </li>
        </ul>
        <ul>
            <li>
                <p>enceladus (anything that starts with knowledge.syniti.com/bulk)</p>
                <ul>
                    <li>
                        <p>Bulk Update</p>
                    </li>
                    <li>
                        <p>Search</p>
                    </li>
                </ul>
            </li>
        </ul>
        <ul>
            <li>
                <p>firewatch-ui (anything that starts with dm.syniti.com/)</p>
                <ul>
                    <li>
                        <p>Migration dashboards</p>
                    </li>
                    <li>
                        <p>Though this one doesn’t really have static guidance right now so probably isn’t super relevant, but is technically one of our UI apps.</p>
                    </li>
                </ul>
            </li>
        </ul>
        <ul>
            <li>
                <p>kubernao (anything that starts with knowledge.syniti.com/categories)</p>
                <ul>
                    <li>
                        <p>Category Admin</p>
                    </li>
                </ul>
            </li>
        </ul>
        <ul>
            <li>
                <p>Phoebe</p>
                <ul>
                    <li>
                        <p>Strategy</p>
                    </li>
                </ul>
            </li>
        </ul>
        <ul>
            <li>
                <p>tethys (anything that starts with knowledge.syniti.com/uploads)</p>
                <ul>
                    <li>
                        <p>Remote Uploads</p>
                    </li>
                </ul>
            </li>
        </ul>
    </body>
</html>